apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

mainClassName = "edu.wpi.cs3733d18.teamS.controller.Main"

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

repositories {

    mavenCentral()
    flatDir {
        dirs 'lib'
    }
    maven {
        url "https://ravana.dyn.wpi.edu/maven"
    }
}

// You'll need to create an integration-test folder with the same structure as your test or main folders
sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}
configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}
// This will be the name of the task that you'll run to do only your integration tests
task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

dependencies {
    testCompile(
            [group: 'junit', name: 'junit', version: '4.12'],
            [group: 'com.jfoenix', name: 'jfoenix', version: '8.0.3'],
            [group: 'org.apache.derby', name: 'derby', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbyclient', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbytools', version: '10.11.1.1'],
            "org.testfx:openjfx-monocle:8u76-b04", // jdk-9+181 for Java 9,
            "org.testfx:testfx-core:4.0.13-alpha",
            "org.testfx:testfx-junit:4.0.13-alpha",
            [group: 'd18.teamR', name: 'Prescriptions', version: '1.0.0'],
            [group: 'd18.teamS', name: 'ComputerService', version: '1.1.1'],
            [group: 'd18.teamO', name: 'GiftShop', version: '1.0.2'],
            [group: 'd18.teamF', name: 'VoiceRecognition', version: '1.1.0'],
            [group: 'd18.teamQ', name: 'SanitationRequest', version: '1.0.0'],
            [group: 'd18.teamP', name: 'TransportationRequest', version: '1.0.0'],
            [group: 'b17.teamI', name: 'FoodRequest', version: '1.0.0']
    )
    compile(
            [group: 'junit', name: 'junit', version: '4.12'],
            [group: 'com.jfoenix', name: 'jfoenix', version: '8.0.3'],
            [group: 'org.apache.derby', name: 'derby', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbyclient', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbytools', version: '10.11.1.1'],
            [group: 'com.google.zxing', name: 'core', version: '3.2.1'],
            fileTree(dir: 'lib', include: '*.jar'),
            [group: 'joda-time', name: 'joda-time', version: '2.9.9'],
            [group: 'commons-codec', name: 'commons-codec', version: '1.11'],
            [group: 'com.twilio.sdk', name: 'twilio', version: '7.19.0'],
            [group: 'd18.teamR', name: 'Prescriptions', version: '1.0.0'],
            [group: 'd18.teamS', name: 'ComputerService', version: '1.1.1'],
            [group: 'd18.teamO', name: 'GiftShop', version: '1.0.2'],
            [group: 'd18.teamF', name: 'VoiceRecognition', version: '1.1.0'],
            [group: 'd18.teamQ', name: 'SanitationRequest', version: '1.0.0'],
            [group: 'd18.teamP', name: 'TransportationRequest', version: '1.0.0'],
            [group: 'b17.teamI', name: 'FoodRequest', version: '1.0.0']
    )
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
// This allows your tests to be run multiple times in a row without needing to change the files
test {
    outputs.upToDateWhen { false }
}


jar {

    manifest {
        attributes 'Main-Class': mainClassName
    }
    from configurations.runtime.collect { zipTree(it) }
}

